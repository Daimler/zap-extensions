ascanrules.desc = Statut de publication des r\u00e8gles d'analyse actives
ascanrules.name = R\u00e8gles d'analyse active

ascanrules.bufferoverflow.name = D\u00e9bordement de tampon
ascanrules.bufferoverflow.desc = Les erreurs de d\u00e9bordement de tampon sont caract\u00e9ris\u00e9es par la sur\u00e9criture des espaces de m\u00e9moire du processus en arri\u00e8re-plan, qui ne devraient jamais \u00eatre modifi\u00e9s, intentionnellement ou non. \u00c9craser les valeurs de l'IP (Instruction Pointer), BP (pointeur de Base) et autres registres provoque des exceptions, des erreurs de segmentation et des erreurs dans d'autres processus. Ces erreurs terminent g\u00e9n\u00e9ralement l'ex\u00e9cution de l'application d'une mani\u00e8re inattendue. 
ascanrules.bufferoverflow.soln = R\u00e9\u00e9crire le programme d'arri\u00e8re-plan en utilisant une v\u00e9rification de la longueur de retour correcte.  Cela n\u00e9cessitera une recompilation de l'ex\u00e9cutable d'arri\u00e8re-plan.
ascanrules.bufferoverflow.refs = https\://owasp.org/www-community/attacks/Buffer_overflow_attack
ascanrules.bufferoverflow.other = D\u00e9bordement de tampon potentiel. Le script a ferm\u00e9 la connexion et a lanc\u00e9 une erreur interne du serveur 500

ascanrules.commandinjection.name=Injection de commande de SE \u00e0 distance
ascanrules.commandinjection.desc=Technique d'attaque utilis\u00e9e pour l'ex\u00e9cution non autoris\u00e9e de commandes du syst\u00e8me d'exploitation. Cette attaque est possible lorsqu'une application accepte des entr\u00e9es douteuses pour g\u00e9n\u00e9rer des commandes de syst\u00e8me d'exploitation vuln\u00e9rables, sans assainissement correct des donn\u00e9es et/ou sans appel correct de programmes externes.
ascanrules.commandinjection.refs=http\://cwe.mitre.org/data/definitions/78.html\n\
https\://owasp.org/www-community/attacks/Command_Injection
ascanrules.commandinjection.otherinfo.feedback-based=La r\u00e8gle d''analyse a r\u00e9ussi \u00e0 r\u00e9cup\u00e9rer le contenu d''un fichier ou d''une commande en envoyant [{0}] au syst\u00e8me d''exploitation ex\u00e9cutant cette application
ascanrules.commandinjection.otherinfo.time-based=La r\u00e8gle d''analyse a r\u00e9ussi \u00e0 contr\u00f4ler le temps de r\u00e9ponse de l''application en envoyant [{0}] au syst\u00e8me d''exploitation ex\u00e9cutant cette application

ascanrules.elmah.name = Fuite d\u2019informations ELMAH
ascanrules.elmah.desc = Le module de journalisation d'erreur et de gestionnaire HTTP (ELMAH [elmah.axd]) est disponible. Ce module peut laisser \u00e9chapper une quantit\u00e9 importante d\u2019informations pr\u00e9cieuses.
ascanrules.elmah.otherinfo = Selon le code de la r\u00e9ponse, ELMAH est peut-\u00eatre prot\u00e9g\u00e9 par un m\u00e9canisme d'authentification ou d'autorisation.  
ascanrules.elmah.refs = https\://www.troyhunt.com/aspnet-session-hijacking-with-google/\n\
https\://www.nuget.org/packages/elmah\n\
https\://elmah.github.io/
ascanrules.elmah.soln = Examinez si ELMAH est r\u00e9ellement n\u00e9cessaire \u00e0 la production, et si ce n\u2019est pas le cas, d\u00e9sactivez-le. S\u2019il est n\u00e9cessaire , assurez-vous que l'acc\u00e8s \u00e0 ELMAH requiert authentification et autorisation. Voir aussi\: https\://elmah.github.io/a/securing-error-log-pages/

ascanrules.formatstring.name=Erreur de format de cha\u00eene
ascanrules.formatstring.desc=Une erreur de format de cha\u00eene s'est produite lorsque les donn\u00e9es provenant d'une cha\u00eene d'entr\u00e9e ont \u00e9t\u00e9 \u00e9valu\u00e9es comme une commande par l'application. 
ascanrules.formatstring.soln= R\u00e9\u00e9crire le programme d'arri\u00e8re-plan en supprimant de mani\u00e8re correcte les mauvaises cha\u00eenes de caract\u00e8res. Cela n\u00e9cessitera la recompilation de l'ex\u00e9cutable d'arri\u00e8re-plan .
ascanrules.formatstring.refs=https\://owasp.org/www-community/attacks/Format_string_attack
ascanrules.formatstring.error1 = \u00c9ventuelle erreur de formatage de cha\u00eene.  Le script a ferm\u00e9 la connexion sur un /%s
ascanrules.formatstring.error2 = \u00c9ventuelle erreur de formatage de cha\u00eene.  Le script a ferm\u00e9 la connexion sur un /%s et /%x
ascanrules.formatstring.error3 = \u00c9ventuelle erreur de formatage de cha\u00eene.  Le script a ferm\u00e9 la connexion sur une erreur de cha\u00eene au format microsoft

ascanrules.htaccess.name = Fuite d'information .htaccess
ascanrules.htaccess.desc = Les fichiers .htaccess peuvent \u00eatre utilis\u00e9s pour alt\u00e9rer la configuration du serveur web Apache afin d'activer/d\u00e9sactiver des fonctionnalit\u00e9s et caract\u00e9ristiques que le serveur web Apache peut offrir.
ascanrules.htaccess.otherinfo = Selon le code de la r\u00e9ponse, le fichier .htaccess est peut-\u00eatre prot\u00e9g\u00e9 par un m\u00e9canisme d'authentification ou d'autorisation.
ascanrules.htaccess.refs = http\://www.htaccess-guide.com/
ascanrules.htaccess.soln = S'assurer que le fichier .htaccess n'est pas accessible.

ascanrules.sourcecodedisclosurewebinf.name = Divulgation de Code Source - Dossier /WEB-INF
ascanrules.sourcecodedisclosurewebinf.desc = Du code source Java a \u00e9t\u00e9 d\u00e9voil\u00e9 par le serveur internet au travers des fichiers de classe Java du dossier WEB-INF. Les fichiers de classe peuvent \u00eatre d\u00e9compil\u00e9s pour produire un code source qui correspond tr\u00e8s \u00e9troitement au code source original.  
ascanrules.sourcecodedisclosurewebinf.soln = Le serveur internet devrait \u00eatre configur\u00e9 pour ne pas fournir le dossier /WEB-INF ou son contenu aux navigateurs internet, car il contient des informations sensibles telles que des fichiers de code Java compil\u00e9s et des fichiers de propri\u00e9t\u00e9s qui peuvent contenir des informations d'identification. Les classes Java d\u00e9ploy\u00e9es avec l'application devraient \u00eatre obscurcies, en guise de couche de d\u00e9fense suppl\u00e9mentaire dans une optique de "d\u00e9fense en profondeur".
ascanrules.sourcecodedisclosurewebinf.propertiesfile.name = Divulgation de fichier de propri\u00e9t\u00e9s - Dossier /WEB-INF
ascanrules.sourcecodedisclosurewebinf.propertiesfile.desc = Une classe Java du dossier /WEB-INF a d\u00e9voil\u00e9 la pr\u00e9sence du fichier de propri\u00e9t\u00e9s. Les fichiers de propri\u00e9t\u00e9s ne sont pas sens\u00e9s \u00eatre accessibles au public, car ils contiennent g\u00e9n\u00e9ralement des informations de configuration, des informations d'identification ou des cl\u00e9s cryptographiques.   
ascanrules.sourcecodedisclosurewebinf.propertiesfile.soln = Le serveur internet devrait \u00eatre configur\u00e9 pour ne pas servir le dossier /WEB-INF ou son contenu aux navigateurs internet.  Il serait \u00e9galement possible de supprimer le dossier /WEB-INF.  
ascanrules.sourcecodedisclosurewebinf.propertiesfile.extrainfo = La r\u00e9f\u00e9rence vers le fichier de propri\u00e9t\u00e9s a \u00e9t\u00e9 trouv\u00e9e dans le code source Java d\u00e9s-assembl\u00e9 de la classe Java [{0}].

ascanrules.crosssitescripting.name = Cross Site Scripting (r\u00e9fl\u00e9chi)
ascanrules.crosssitescripting.json.name = Faiblesse Cross Site Scripting (r\u00e9fl\u00e9chi dans la r\u00e9ponse JSON)
ascanrules.crosssitescripting.json.desc = Une attaque XSS a \u00e9t\u00e9 r\u00e9fl\u00e9chie dans la r\u00e9ponse JSON, cela peut rendre vuln\u00e9rable les composants qui consommeront ce contenu s'ils ne g\u00e8rent pas ces donn\u00e9es (r\u00e9ponse JSON) de mani\u00e8re appropri\u00e9e.
ascanrules.crosssitescripting.otherinfo.nothtml = Lev\u00e9e avec le degr\u00e9 de confiance faible, car le Content-Type n'est pas HTML
ascanrules.crosssitescripting.otherinfo.accesskey = L'attribut accesskey sp\u00e9cifie une touche de raccourci pour activer/focaliser un \u00e9l\u00e9ment. Cet attribut peut d\u00e9clencher des charges utiles pour des tags non-conventionnels ou personnalis\u00e9s.

ascanrules.persistentxssattack.name=Cross-Site Scripting (stock\u00e9)
ascanrules.persistentxssattack.otherinfo=URL de la source\: {0}
ascanrules.persistentxssattack.json.name = Faiblesse Cross Site Scripting (stock\u00e9 dans la r\u00e9ponse JSON)
ascanrules.persistentxssattack.json.desc = Une attaque XSS a \u00e9t\u00e9 trouv\u00e9e dans la r\u00e9ponse JSON, cela peut rendre vuln\u00e9rable les composants qui consommeront ce contenu s'ils ne g\u00e8rent pas ces donn\u00e9es (r\u00e9ponse JSON) de mani\u00e8re appropri\u00e9e.
ascanrules.persistentxssattack.otherinfo.nothtml = Lev\u00e9e avec le degr\u00e9 de confiance faible, car le Content-Type n'est pas HTML

ascanrules.persistentxssprime.name=Cross Site Scripting (stock\u00e9) - premier
ascanrules.persistentxssprime.misc=N/A

ascanrules.persistentxssspider.name=Cross Site Scripting (stock\u00e9) - Robot
ascanrules.persistentxssspider.misc=N/A

ascanrules.sqlinjection.name=Injection SQL
ascanrules.sqlinjection.desc=Une injection SQL peut \u00eatre possible.
ascanrules.sqlinjection.soln=Ne faites pas confiance aux entr\u00e9es clients, m\u00eame s'il y a une validation c\u00f4t\u00e9 client en place.\n\
En g\u00e9n\u00e9ral, v\u00e9rifiez le type de toutes les donn\u00e9es c\u00f4t\u00e9 serveur.\n\
Si l'application utilise JDBC, utilisez les PreparedStatement ou les CallableStatement, avec les param\u00e8tres pass\u00e9s avec '?'\n\
Si l'application utilise ASP, utilisez les commandes d'objets ADO avec une v\u00e9rification forte du type et des requ\u00eates param\u00e9tr\u00e9es.\n\
Si la base de donn\u00e9es propose des proc\u00e9dures stock\u00e9es, utilisez-les.\n\
Ne concat\u00e9nez *jamais* des cha\u00eenes de caract\u00e8res dans les requ\u00eates des proc\u00e9dures stock\u00e9es. N'utilisez pas 'exec', 'exec immediate' ni aucune fonctionnalit\u00e9 \u00e9quivalente \!\n\
Ne cr\u00e9ez pas de requ\u00eate SQL dynamique avec de la concat\u00e9nation de cha\u00eenes de caract\u00e8res.\n\
\u00c9chappez toutes les donn\u00e9es re\u00e7ues depuis le client.\n\
Appliquez une liste blanche des caract\u00e8res autoris\u00e9s, ou une liste noire des caract\u00e8res non autoris\u00e9s sur les entr\u00e9es utilisateur.\n\
Appliquez le principe du moindre privil\u00e8ge en utilisant un utilisateur non privil\u00e9gi\u00e9 pour se connecter \u00e0 la base de donn\u00e9es.\n\
En particulier, \u00e9vitez d'utiliser les utilisateurs 'sa' ou 'db-owner'. Cela n'\u00e9liminera pas les injections SQL, mais minimisera ses impacts.\n\
Ajustez les droits d'acc\u00e8s \u00e0 la base de donn\u00e9es au minimum n\u00e9cessaire pour l'application.
ascanrules.sqlinjection.refs=https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
ascanrules.sqlinjection.alert.errorbased.attack=[{0}] champ\: [{1}], valeur [{2}]
ascanrules.sqlinjection.alert.errorbased.differentiation.attack=Valeur d''Origine\: [{0}]. Valeur Modifi\u00e9e\: [{1}]. Valeur de Contr\u00f4le\: [{2}]
ascanrules.sqlinjection.alert.booleanbased.attack=[{0}] champ\: [{1}], valeur [{2}]
ascanrules.sqlinjection.alert.unionbased.attack=[{0}] champ\: [{1}], valeur [{2}]
ascanrules.sqlinjection.alert.errorbased.extrainfo=SGBDR [{0}] probable, compte tenu du message d''erreur trouv\u00e9 par l''expression r\u00e9guli\u00e8re [{1}] dans les r\u00e9sultats HTML.\n\
La vuln\u00e9rabilit\u00e9 a \u00e9t\u00e9 d\u00e9tect\u00e9e dans le message d''erreur de la base de donn\u00e9e, message provoqu\u00e9 par la manipulation du param\u00e8tre
ascanrules.sqlinjection.alert.unionbased.extrainfo=SGBDR [{0}] probable, compte tenu du message d''erreur sp\u00e9cifique \u00e0 l''UNION, trouv\u00e9 par l''expression r\u00e9guli\u00e8re [{1}] dans les r\u00e9sultats HTML.\n\
La vuln\u00e9rabilit\u00e9 a \u00e9t\u00e9 d\u00e9tect\u00e9e dans le message d''erreur provoqu\u00e9 par la manipulation du param\u00e8tre d''une clause SQL ''UNION''.
ascanrules.sqlinjection.alert.expressionbased.extrainfo=Les r\u00e9sultats de la page originale ont \u00e9t\u00e9 reproduits avec succ\u00e8s en utilisant l''expression [{0}] comme valeur du param\u00e8tre\n\
La valeur du param\u00e8tre {1} en cours de modification est extraite de la sortie HTML \u00e0 fin de comparaison
ascanrules.sqlinjection.alert.orderbybased.extrainfo=Les r\u00e9sultats de la page originale ont \u00e9t\u00e9 reproduits avec succ\u00e8s en utilisant l''expression "ORDER BY" [{0}] comme valeur de param\u00e8tre\n\
La valeur du param\u00e8tre {1} en cours de modification est extraite de la sortie HTML \u00e0 fin de comparaison
ascanrules.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=Le message non modifi\u00e9 donne le statut HTTP [{0}], le message modifi\u00e9 donne le statut HTTP [{1}]
ascanrules.sqlinjection.alert.errorbased.differentiation.extrainfo=Le message non modifi\u00e9 donne le statut HTTP [{0}], un corps d''une longueur [{1}], le message modifi\u00e9 donne le statut HTTP [{2}], un corps d''une longueur [{3}]. Un tiers (une injection non-SQL induisant une valeur) donne un statut HTTP [{4}], un corps d''une longueur [{5}]
ascanrules.sqlinjection.alert.booleanbased.extrainfo=Les r\u00e9sultats de la page ont \u00e9t\u00e9 manipul\u00e9s avec succ\u00e8s en utilisant les conditions bool\u00e9ennes [{0}] et [{1}]\n\
La valeur du param\u00e8tre en cours de modification {2} est extraite de la sortie HTML \u00e0 fin de comparaison
ascanrules.sqlinjection.alert.booleanbased.extrainfo.dataexists=La donn\u00e9e a \u00e9t\u00e9 retourn\u00e9e pour le param\u00e8tre d'origine.\n\
La vuln\u00e9rabilit\u00e9 a \u00e9t\u00e9 d\u00e9tect\u00e9e en manipulant le param\u00e8tre, ce qui a restreint avec succ\u00e8s les donn\u00e9es initialement retourn\u00e9es,
ascanrules.sqlinjection.alert.booleanbased.extrainfo.datanotexists=Les donn\u00e9es n'ont PAS \u00e9t\u00e9 retourn\u00e9es pour le param\u00e8tre d'origine.\n\
La vuln\u00e9rabilit\u00e9 a \u00e9t\u00e9 d\u00e9tect\u00e9e en manipulant le param\u00e8tre pour r\u00e9cup\u00e9rer avec succ\u00e8s plus de donn\u00e9es qu'initialement retourn\u00e9es,
ascanrules.sqlinjection.alert.timebased.extrainfo=Le temps de la requ\u00eate est contr\u00f4lable \u00e0 l''aide de la valeur du param\u00e8tre [{0}], qui lui fait ainsi prendre [{1}] millisecondes, alors que la requ\u00eate d''origine, non modifi\u00e9e avec la valeur [{2}] prend, quant \u00e0 elle, [{3}] millisecondes 
ascanrules.sqlinjection.authbypass.name=Injection SQL - Contournement de l'authentification
ascanrules.sqlinjection.authbypass.desc=L'injection SQL peut \u00eatre possible sur une page de connexion, ce qui peut permettre de contourner le m\u00e9canisme d'authentification de l'application 

ascanrules.externalredirect.name=Redirection externe
ascanrules.externalredirect.reason.location.header=La r\u00e9ponse contient une redirection dans le champ d'en-t\u00eate Location, ce qui permet de d\u00e9finir une Url externe.
ascanrules.externalredirect.reason.location.meta=La r\u00e9ponse contient une redirection pour 'Location' dans sa balise meta http-equiv, ce qui permet de d\u00e9finir une Url externe.
ascanrules.externalredirect.reason.refresh.header=La r\u00e9ponse contient une redirection dans le champ d'en-t\u00eate Refresh, ce qui permet de d\u00e9finir une Url externe.
ascanrules.externalredirect.reason.refresh.meta=La r\u00e9ponse contient une redirection pour 'Refresh' dans sa balise meta http-equiv, ce qui permet de d\u00e9finir une Url externe.
ascanrules.externalredirect.reason.javascript=La r\u00e9ponse contient une redirection dans son code JavaScript, ce qui permet de d\u00e9finir une Url externe.
ascanrules.externalredirect.reason.notfound=Aucune raison trouv\u00e9e pour ceci...

ascanrules.codeinjection.name=Injection de Code c\u00f4t\u00e9 serveur
ascanrules.codeinjection.name.asp=Injection de Code c\u00f4t\u00e9 serveur - Injection de Code ASP
ascanrules.codeinjection.name.php=Injection de Code c\u00f4t\u00e9 serveur - Injection de Code PHP
ascanrules.codeinjection.desc=Une injection de code peut \u00eatre possible en incluant un code sur mesure qui sera \u00e9valu\u00e9 par le moteur de script
ascanrules.codeinjection.soln=Ne vous fiez pas aux entr\u00e9es du client, m\u00eame si une validation est en place c\u00f4t\u00e9 client. \n\
En g\u00e9n\u00e9ral, v\u00e9rifier le type de toutes les donn\u00e9es du c\u00f4t\u00e9 serveur et \u00e9chapper toutes les donn\u00e9es re\u00e7ues du client.  \u00c9vitez d'utiliser des fonctions eval() combin\u00e9es avec des donn\u00e9es d'entr\u00e9e de l'utilisateur.
ascanrules.codeinjection.refs=http\://cwe.mitre.org/data/definitions/94.html\n\
https\://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection

ascanrules.directorybrowsing.name=R\u00e9pertoire de navigation
ascanrules.directorybrowsing.desc=Il est possible d'afficher la liste de r\u00e9pertoires.  Cette liste peut r\u00e9v\u00e9ler des scripts cach\u00e9s, des fichiers d'inclusion, des sauvegardes de fichiers source, etc. pouvant donner acc\u00e8s \u00e0 des informations sensibles.
ascanrules.directorybrowsing.soln=D\u00e9sactiver la navigation dans les r\u00e9pertoires.  Si la navigation est malgr\u00e9 tout n\u00e9cessaire, assurez-vous que les fichiers r\u00e9pertori\u00e9s n'induisent pas de risques.
ascanrules.directorybrowsing.refs=http\://httpd.apache.org/docs/mod/core.html\#options\n\
http\://alamo.satlug.org/pipermail/satlug/2002-February/000053.html

ascanrules.crlfinjection.name=Injection CRLF
ascanrules.crlfinjection.desc=Le cookie peut \u00eatre renseign\u00e9 par injection CRLF.  Il serait \u00e9galement possible de renseigner des en-t\u00eates de r\u00e9ponse HTTP arbitraires. En outre, la possible manipulation de la r\u00e9ponse \u00e0 l'aide de script intersite peut faire appara\u00eetre une vuln\u00e9rabilit\u00e9 par empoisonnement de cache.
ascanrules.crlfinjection.soln=V\u00e9rifiez soigneusement le  type du param\u00e8tre soumis.  Ne laissez pas passer un CRLF en filtrant les CRLF.
ascanrules.crlfinjection.refs=http\://www.watchfire.com/resources/HTTPResponseSplitting.pdf\n\
http\://webappfirewall.com/lib/crlf-injection.txtnull\n\
http\://www.securityfocus.com/bid/9804

ascanrules.parametertamper.name=Falsification de param\u00e8tre
ascanrules.parametertamper.desc=La manipulation des param\u00e8tres a provoqu\u00e9 une page d'erreur ou l'affichage d'une trace d'appel Java. Ceci indique un d\u00e9faut de gestion des exceptions et ouvre des potentialit\u00e9s pour d'autres exploits.
ascanrules.parametertamper.soln=Identifiez la cause de l'erreur et corrigez-la.  Ne pas faite confiance aux entr\u00e9es c\u00f4t\u00e9 client et appliquez un contr\u00f4le serr\u00e9 du c\u00f4t\u00e9 serveur.  En outre, interceptez proprement les exceptions.  Utilisez une page d'erreur g\u00e9n\u00e9rique 500 pour signaler les erreurs internes du serveur.

ascanrules.pathtraversal.name=Travers\u00e9e de chemin
ascanrules.pathtraversal.other=Test {0}

ascanrules.remotefileinclude.name=Inclusion de fichiers distants

ascanrules.serversideinclude.name=Server Side Include
ascanrules.serversideinclude.desc=Certains param\u00e8tres peuvent conduire \u00e0 ex\u00e9cuter des commandes Server Side Include. Cela peut permettre la connexion \u00e0 des bases de donn\u00e9es ou l'ex\u00e9cution de code arbitraire.
ascanrules.serversideinclude.soln=Ne pas faite confiance aux entr\u00e9es c\u00f4t\u00e9 client et appliquez un contr\u00f4le serr\u00e9 du c\u00f4t\u00e9 serveur.  D\u00e9sactivez la fonction Server Side Include. \n\

Refer=Vers la manuel pour d\u00e9sactiver la fonction Server Side Include.\n\
\n\
Utilisez les moindres privil\u00e8ges pour ex\u00e9cuter le serveur web ou applicatif.\n\
\n\
Pour Apache, d\u00e9sactivez ce qui suit\:\n\
\n\
Options Indexes FollowSymLinks Includes\n\
\n\
AddType application/x-httpd-cgi .cgi\n\
\n\
AddType text/x-server-parsed-html .html
ascanrules.serversideinclude.refs=http\://www.carleton.ca/~dmcfet/html/ssi.html
